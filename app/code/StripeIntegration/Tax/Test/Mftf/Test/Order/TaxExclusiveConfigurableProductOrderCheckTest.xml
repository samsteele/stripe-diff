<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="TaxExclusiveConfigurableProductOrderCheckTest">
        <annotations>
            <features value="Tax"/>
            <stories value="Checkout"/>
            <title value="General customer configurable product order creation with tax exclusive behaviour"/>
            <description value="Customer adds a configurable product to the basket and creates an order and checks the tax values for the order in admin area with tax exclusive behaviour."/>
            <severity value="CRITICAL"/>
            <group value="stripe-tax"/>
            <group value="tax-exclusive"/>
        </annotations>
        <before>
            <actionGroup ref="ConfigureModuleActionGroup" stepKey="configureModule"/>
            <createData entity="ProductsCategory" stepKey="createCategory"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>

            <!-- Create a configurable product via the UI -->
            <actionGroup ref="CreateConfigurableProductWithWeightActionGroup" stepKey="createProduct">
                <argument name="product" value="TaxConfigurableProduct"/>
                <argument name="category" value="$$createCategory$$"/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="adminLogout"/>
        </before>
        <after>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <actionGroup ref="DeleteProductBySkuActionGroup" stepKey="deleteProduct">
                <argument name="sku" value="{{TaxConfigurableProduct.sku}}"/>
            </actionGroup>
            <actionGroup ref="AdminGridFilterResetActionGroup" stepKey="clearGridFiltersVirtual"/>
            <actionGroup ref="AdminGridFilterFillInputFieldActionGroup" stepKey="addSkuFilterVirtual">
                <argument name="filterInputName" value="sku"/>
                <argument name="filterValue" value="{{TaxConfigurableProduct.sku}}"/>
            </actionGroup>
            <actionGroup ref="AdminClickSearchInGridActionGroup" stepKey="applyGridFilterVirtual"/>
            <actionGroup ref="DeleteProductsIfTheyExistActionGroup" stepKey="deleteVirtualProducts">
                <argument name="sku" value="{{TaxConfigurableProduct.sku}}"/>
            </actionGroup>
            <actionGroup ref="ResetAdminDataGridToDefaultViewActionGroup" stepKey="clearProductsGridFilters"/>
            <actionGroup ref="AdminDeleteProductAttributeByLabelActionGroup" stepKey="deleteProductAttribute">
                <argument name="productAttributeLabel" value="{{colorProductAttribute.default_label}}"/>
            </actionGroup>
            <!-- Reindex after deleting product attribute -->
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="adminLogout"/>
        </after>

        <actionGroup ref="StorefrontAddConfigurableProductToTheCartActionGroup" stepKey="addConfigurableProductToTheCart">
            <argument name="urlKey" value="{{TaxConfigurableProduct.urlKey}}"/>
            <argument name="productAttribute" value="{{colorProductAttribute.default_label}}"/>
            <argument name="productOption" value="{{colorProductAttribute1.name}}"/>
            <argument name="qty" value="1"/>
        </actionGroup>

        <!-- Go to checkout -->
        <actionGroup ref="GoToCheckoutFromMinicartActionGroup" stepKey="goToCheckoutFromMinicart"/>

        <!-- Fill Shipment form -->
        <actionGroup ref="FillGuestCustomerShippingDetailsActionGroup" stepKey="checkoutFillingShippingSection"/>

        <!-- Place Order -->
        <actionGroup ref="PlaceSimpleOrderActionGroup" stepKey="placeOrder"/>

        <grabTextFrom selector="{{CheckoutSuccessMainSection.orderNumber}}" stepKey="grabOrderNumber"/>

        <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
        <actionGroup ref="FilterOrderGridByIdActionGroup" stepKey="filterOrderById">
            <argument name="orderId" value="$grabOrderNumber"/>
        </actionGroup>

        <actionGroup ref="AdminOrderGridClickFirstRowActionGroup" stepKey="clickOrderRow"/>

        <actionGroup ref="CheckOrderDataAdminActionGroup" stepKey="checkOrderAdminData"/>
    </test>
</tests>
